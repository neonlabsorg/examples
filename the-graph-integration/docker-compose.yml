version: "3"

services:
  postgres:
    container_name: postgres
    image: neonlabsorg/neon-accountsdb:ci-master-dumper-plugin
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_DB: solana
      POSTGRES_USER: solana-user
      POSTGRES_PASSWORD: solana-pass
    hostname: postgres
    ports:
      - 127.0.0.1:5432:5432
    expose:
      - "5432"
    networks:
      - net
    healthcheck:
      test: [ CMD-SHELL, "pg_isready -h postgres -p 5432 -U solana-user" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 5s

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: il@neonlabs.org
      PGADMIN_DEFAULT_PASSWORD: qazwsx
    ports:
      - 127.0.0.1:8080:80
    volumes:
      - ./server.json:/pgadmin4/servers.json
    networks:
      - net
    depends_on:
      postgres:
        condition: service_healthy
    
  validator:
    container_name: validator
    image: neonlabsorg/neon-validator:ci-master-dumper-plugin
    environment:
      SOLANA_URL: http://validator:8899
      RUST_LOG: solana_runtime::system_instruction_processor=trace,solana_runtime::message_processor=debug,solana_bpf_loader=debug,solana_rbpf=debug
      GEYSER_PLUGIN_CONFIG: /opt/accountsdb-plugin-config.json
    hostname: validator
    ports:
      - 0.0.0.0:8899:8899
    expose:
      - "8899"
      - "9900"
      - "8900"
      - "8001"
      - "8001-8009/udp"
    networks:
      - net
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      # Must be available from outside (calling without -u causes premature result)
      test: [ CMD-SHELL, "./wait-for-neon.sh" ]
      interval: 5s
      timeout: 5s
      retries: 200
      start_period: 5s
    entrypoint: /opt/solana/bin/solana-run-neon.sh

  dbcreation:
    container_name: dbcreation
    image: neonlabsorg/proxy:latest
    environment:
      SOLANA_URL: http://validator:8899
      POSTGRES_DB: solana
      POSTGRES_USER: solana-user
      POSTGRES_PASSWORD: solana-pass
      POSTGRES_HOST: postgres
    entrypoint: proxy/run-dbcreation.sh
    networks:
      - net
    depends_on:
      postgres:
        condition: service_healthy
        
  indexer:
    container_name: indexer
    image: neonlabsorg/proxy:latest
    environment:
      SOLANA_URL: http://validator:8899
      POSTGRES_DB: solana
      POSTGRES_USER: solana-user
      POSTGRES_PASSWORD: solana-pass
      POSTGRES_HOST: postgres
      GATHER_STATISTICS: "YES"
      LOG_FULL_OBJECT_INFO: "NO"
      CONFIG: ci
      EVM_LOADER: 53DfF883gyixYNXnM7s5xhdeyV8mVk9T4i2hGV9vG9io
    hostname: indexer
    depends_on:
      validator:
        condition: service_healthy
      dbcreation:
        condition: service_completed_successfully
    expose:
      - "8887"
    networks:
      - net
    entrypoint: proxy/run-indexer.sh
  
  proxy:
    container_name: proxy
    image: neonlabsorg/proxy:latest
    environment:
      SOLANA_URL: http://validator:8899
      FAUCET_URL: http://faucet:3333
      POSTGRES_DB: solana
      POSTGRES_USER: solana-user
      POSTGRES_PASSWORD: solana-pass
      LOG_NEON_CLI_DEBUG: "YES"
      FUZZING_BLOCKHASH: "YES"
      CONFIG: ci
      PP_SOLANA_URL: ${CI_PP_SOLANA_URL:-https://api.devnet.solana.com}
      PYTH_MAPPING_ACCOUNT: ${CI_PYTH_MAPPING_ACCOUNT:-BmA9Z6FjioHJPpjT39QazZyhDRUdZy2ezwx4GiDdE2u2}
      MIN_OPERATOR_BALANCE_TO_WARN: 4565760000 # = 913152000 * 5 (5 storage accounts) = 4.56576 SOL
      MIN_OPERATOR_BALANCE_TO_ERR: 913152000 # = solana rent 131072 (= Rent-exempt minimum: 0.913152 SOL) SOLs to create a storage
      MINIMAL_GAS_PRICE: 1
      ENABLE_PRIVATE_API: "YES"
      ALLOW_UNDERPRICED_TX_WITHOUT_CHAINID: "YES"
      LOG_FULL_OBJECT_INFO: "YES"
    hostname: proxy
    depends_on:
      dbcreation:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      indexer:
        condition: service_started
    ports:
      - 127.0.0.1:9090:9090
    expose:
      - "8888"
      - "9090"
    ports:
      - '127.0.0.1:9091:9090'
    networks:
      - net
    entrypoint: proxy/run-test-proxy.sh
    healthcheck:
      test: [ CMD-SHELL, "/opt/health_check_proxy.sh" ]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 5s

  deploy_contracts:
    container_name: deploy_contracts
    image: neonlabsorg/neon-validator:ci-master-dumper-plugin
    environment:
      SOLANA_URL: http://validator:8899
      SPL_TOKEN_AUTHORITY: /opt/contracts/ci-tokens/owner-keypair.json
    networks:
      - net
    depends_on:
      proxy:
        condition: service_healthy
    command: bash -c "create-test-accounts.sh 1 && deploy-contracts.sh"

  neon-tracer:
    container_name: neon-tracer
    hostname: neon-tracer
    environment:
      RUST_BACKTRACE: 1
      RUST_LOG: neon=debug
      LISTEN_ADDR: 0.0.0.0:8250
      SOLANA_URL: http://validator:8899
      EVM_LOADER: 53DfF883gyixYNXnM7s5xhdeyV8mVk9T4i2hGV9vG9io
      TRACER_DB_HOST: postgres
      TRACER_DB_PORT: 5432
      TRACER_DB_NAME: solana
      TRACER_DB_USER: solana-user
      TRACER_DB_PASSWORD: solana-pass
      WEB3_PROXY: http://proxy:9090/solana
    image: neonlabsorg/neon-tracer:ci-master-dumper-plugin
    depends_on:
      postgres:
        condition: service_healthy
      validator:
        condition: service_healthy
      proxy:
        condition: service_healthy
    expose:
      - "8250"
    ports:
      - "127.0.0.1:8250:8250"
    networks:
      - net

  faucet:
    container_name: faucet
    image: neonlabsorg/faucet:latest
    environment:
      FAUCET_RPC_PORT: 3333
      FAUCET_RPC_ALLOWED_ORIGINS: '["http://neon-tracer-test"]'
      FAUCET_WEB3_ENABLE: 'true'
      WEB3_RPC_URL: http://neon-rpc:9090
      WEB3_PRIVATE_KEY: 0x4deacb079b4714c38f39508aa8900039f2721ed8686835d43347ba9267da767b
      NEON_ERC20_TOKENS: '["0xB521b9F3484deF53545F276F1DAA50ef0Ca82E2d", "0x8a2a66CA0E5D491A001957edD45A6350bC76D708", "0x914782059DC42d4E590aeFCfdbF004B2EcBB9fAA", "0x7A7510b9b18241C788a7aAE8299D1fA6010D8128"]'
      NEON_ERC20_MAX_AMOUNT: 1000
      FAUCET_SOLANA_ENABLE: 'true'
      SOLANA_URL: http://validator:8899
      NEON_OPERATOR_KEYFILE: /root/.config/solana/id.json
      NEON_ETH_MAX_AMOUNT: 1000
      TEST_FAUCET_INIT_NEON_BALANCE: 100000
    hostname: faucet
    ports:
      - 127.0.0.1:3333:3333
    expose:
      - "3333"
    networks:
      - net
    entrypoint: ./run-test-faucet.sh
    depends_on:
      proxy:
        condition: service_healthy
      deploy_contracts:
        condition: service_completed_successfully

  neon-rpc:
    container_name: neon-rpc
    hostname: neon-rpc
    image: neonlabsorg/neon-rpc:ci-master-dumper-plugin
    ports:
      - 127.0.0.1:9090:9090
    expose:
      - "9090"
    networks:
      - net
    depends_on:
      proxy:
        condition: service_healthy
      neon-tracer:
        condition: service_started
        
  graph-node:
    container_name: graph-node
    image: graphprotocol/graph-node:latest
    ports:
      - '127.0.0.1:8000:8000'
      - '127.0.0.1:8001:8001'
      - '127.0.0.1:8020:8020'
      - '127.0.0.1:8030:8030'
      - '127.0.0.1:8040:8040'
    depends_on:
      - ipfs
      - postgres
      - neon-rpc
      - faucet
    environment:
      postgres_host: postgres
      postgres_user: solana-user
      postgres_pass: solana-pass
      postgres_db: solana
      ipfs: 'ipfs:5001'
      ethereum: 'neonlabs:http://neon-rpc:9090'
      RUST_LOG: info
    networks:
      - net

  ipfs:
    container_name: ipfs
    image: ipfs/go-ipfs:v0.4.23
    ports:
      - '5001:5001'
    volumes:
      - ./data/ipfs:/data/ipfs
    networks:
      - net

networks:
  net:

